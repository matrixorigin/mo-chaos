name: Deploy Mo Cluster and Run Chaos Experiment on TKE
on:
  workflow_dispatch:
jobs:
  Deploy:
    runs-on: amd64-tke-dind
    steps:
      - uses: actions/checkout@v2
      - name: Deploy
        env:
          COS_AK: ${{ secrets.COS_AK }}
          COS_SK: ${{ secrets.COS_SK }}
        run: |
          chmod +x .github/workflows/tke/install-mo.sh
          .github/workflows/tke/install-mo.sh
        shell: bash
      - name: Upload mo cluster artifact
        uses: actions/upload-artifact@v3
        with:
          name: mo-cluster
          path: |
            mo-cluster.yaml
            uuid
#  bvt_test:
#    if: ${{ always() && !cancelled() && needs.setup_mo_test_env.result == 'success' }}
#    name: MO CHECKIN BVT TEST
#    runs-on: amd64-tke-mo
#    needs:
#      - Deploy
#    steps:
#      - name: Clone MO-Tester
#        if: ${{ always() && !cancelled() }}
#        uses: actions/checkout@v3
#        with:
#          repository: matrixorigin/mo-tester
#          token: ${{secrets.TOKEN_ACTION}}
#          path: ./mo-tester
#          ref: main
#      - name: Clone matrixone Repo
#        if: ${{ always() && !cancelled() }}
#        uses: actions/checkout@v3
#        with:
#          path: ./matrixone
#      - name: Download mo cluster artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: mo-cluster
#          path: .
#      - name: Set JAVA PATH
#        run: |
#          echo "$JAVA_HOME/bin" >> $GITHUB_PATH
#      - name: Generate MO-Tester Config and Start BVT Test
#        if: ${{ always() && !cancelled() }}
#        timeout-minutes: 20
#        run: |
#          uuid=$(cat uuid)
#          NAMESPACE=chaos-$uuid
#          export LC_ALL="C.UTF-8"
#          locale
#          sed -i "s/127.0.0.1:6001/${{ needs.setup_mo_test_env.outputs.mo_svc_ip }}:6001/" ./mo-tester/mo.yml
#          sed -i 's/socketTimeout:.*/socketTimeout: 300000/g' ./mo-tester/mo.yml
#          sed -i 's/  serverIP: "127.0.0.1"/  serverIP: "${{ needs.setup_mo_test_env.outputs.cn_ips }}"/g' ./mo-tester/mo.yml
#          sed -i 's/waittime:.*/waittime: 2000/g' ./mo-tester/run.yml
#          cat ./mo-tester/mo.yml
#          echo "=========================="
#          cat ./mo-tester/run.yml
#          echo "=========================="
#
#          cd $GITHUB_WORKSPACE/mo-tester
#          ./run.sh -n -g -o -p $GITHUB_WORKSPACE/matrixone/test/distributed/cases -s /matrixone/test/distributed/resources -e optimistic  2>&1
#          rm -rf .git lib
  Run-Chaos:
    runs-on: amd64-tke-dind
    needs:
      - deploy
    steps:
      - uses: actions/checkout@v2
      - name: Download mo cluster artifact
        uses: actions/download-artifact@v3
        with:
          name: mo-cluster
          path: .
      - run: |
          set -e
          sleep 120
          uuid=$(cat uuid)
          NAMESPACE=chaos-$uuid
          kubectl apply -f .github/workflows/tke/cn-pod-delete-job.yaml -n $NAMESPACE
          kubectl wait --for=condition=ready pod --selector=job-name=run --timeout=-1s -n $NAMESPACE
          kubectl logs -f job.batch/run -n $NAMESPACE
        name: Run
  Cleanup:
    runs-on: amd64-tke-dind
    if: always()
    needs:
      - Deploy
      - Run-Chaos
    steps:
      - uses: actions/checkout@v2
      - name: Download mo cluster artifact
        uses: actions/download-artifact@v3
        with:
          name: mo-cluster
          path: .
      - name: Cleanup
        run: |
#          chmod +x .github/workflows/tke/clean-mo.sh
#          .github/workflows/tke/clean-mo.sh
        shell: bash