name: Just for Test
on:
  workflow_dispatch:
jobs:
#  bvt_test:
#    name: MO CHECKIN BVT TEST
#    runs-on: amd64-tke-mo
#    steps:
#      - name: Clone MO-Tester
#        uses: actions/checkout@v3
#        with:
#          repository: matrixorigin/mo-tester
#          path: ./mo-tester
#          ref: main
#      - name: Clone matrixone Repo
#        uses: actions/checkout@v3
#        with:
#          repository: matrixorigin/matrixone
#          ref: main
#          path: ./matrixone
#      - name: Download mo cluster artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: mo-cluster
#          path: .
#      - name: Set JAVA PATH
#        run: |
#          echo "$JAVA_HOME/bin" >> $GITHUB_PATH
#      - name: Generate MO-Tester Config and Start BVT Test
#        timeout-minutes: 20
#        run: |
#          name=cbhufqauf1n8p599
#          NAMESPACE=chaos-$name
#          export LC_ALL="C.UTF-8"
#          locale
#          sed -i "s/127.0.0.1:6001/$name-tp-cn.$NAMESPACE:6001/" ./mo-tester/mo.yml
#          sed -i 's/socketTimeout:.*/socketTimeout: 300000/g' ./mo-tester/mo.yml
#          sed -i 's/waittime:.*/waittime: 2000/g' ./mo-tester/run.yml
#          cat ./mo-tester/mo.yml
#          echo "=========================="
#          cat ./mo-tester/run.yml
#          echo "=========================="
#
#          cd $GITHUB_WORKSPACE/mo-tester
#          ./run.sh -n -g -o -p $GITHUB_WORKSPACE/matrixone/test/distributed/cases -s $GITHUB_WORKSPACE/matrixone/test/distributed/resources -e optimistic  2>&1
#          rm -rf .git lib
  sysbench_oltp_test:
    name: SYSBENCH OLTP TEST
    runs-on: amd64-tke-mo
    timeout-minutes: 150
    steps:
      - name: Clone MO-Load
        uses: actions/checkout@v4
        with:
          repository: matrixorigin/mo-load
          path: ./mo-load
          ref: main
      - name: Start OLTP Point Select Test With 100 Threads
        if: ${{ always() && !cancelled() }}
        run: |
          name=tx9t85m29wpgfbib
          NAMESPACE=chaos-$name
          export LC_ALL="C.UTF-8"
          locale
          cd mo-load
          sed -i "s/127.0.0.1:6001/$name-tp-cn.$NAMESPACE:6001/" mo.yml
          sed -i 's/true/false/g' sysbench.yml
          echo 'Start Prepare Data of 10-tables-100000-per-table'
          ./start.sh -m SYSBENCH -n 10 -s 100000
          sleep 10
          
          echo ''
          echo 'Start OLTP Point Select Test With 100 threads'
          ./start.sh -c cases/sysbench/point_select_10_100000 -t 100 -d 10 -g -b sbtest

      - name: Start OLTP Point Select Test With 1000 Threads
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd mo-load
          echo 'Start Prepare Data of 10-tables-100000-per-table'
          ./start.sh -m SYSBENCH -n 10 -s 100000
          sleep 10
          
          echo ''
          echo 'Start OLTP Point Select Test With 1000 threads'
          ./start.sh -c cases/sysbench/point_select_10_100000 -t 1000 -d 10 -g -b sbtest

      - name: Start OLTP Update Test With 100 Threads
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd mo-load
          echo 'Start Prepare Data of 10-tables-100000-per-table'
          ./start.sh -m SYSBENCH -n 10 -s 100000
          sleep 10
          
          echo ''
          echo 'Start OLTP UPDATE Test With 100 threads'
          ./start.sh -c cases/sysbench/update_pk_10_100000_rc -t 100 -d 10 -g -b sbtest

      - name: Start OLTP Update Test With 1000 Threads
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd mo-load
          echo 'Start Prepare Data of 10-tables-100000-per-table'
          ./start.sh -m SYSBENCH -n 10 -s 100000
          sleep 10
          
          echo ''
          echo 'Start OLTP UPDATE Test With 500 threads'
          ./start.sh -c cases/sysbench/update_pk_10_100000_rc -t 1000 -d 10 -g -b sbtest

      - name: Start OLTP Insert Test With 100 Threads
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd mo-load
          echo 'Start Prepare Data of 10-tables-100000-per-table'
          ./start.sh -m SYSBENCH -n 10 -s 100000
          sleep 10
          
          echo ''
          echo 'Start OLTP Insert Test With 100 threads'
          ./start.sh -c cases/sysbench/simple_insert_10_100000 -t 100 -d 10 -g -b sbtest

      - name: Start OLTP Insert Test With 1000 Threads
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd mo-load
          echo 'Start Prepare Data of 10-tables-100000-per-table'
          ./start.sh -m SYSBENCH -n 10 -s 100000
          sleep 10
          
          echo ''
          echo 'Start OLTP Insert Test With 1000 threads'
          ./start.sh -c cases/sysbench/simple_insert_10_100000 -t 1000 -d 10 -g -b sbtest

      - name: Start OLTP Delete Test With 100 Threads
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd mo-load
          echo 'Start Prepare Data of 10-tables-100000-per-table'
          ./start.sh -m SYSBENCH -n 10 -s 100000
          sleep 10
          
          echo ''
          echo 'Start OLTP Delete Test With 100 threads'
          ./start.sh -c cases/sysbench/delete_pk_10_100000_rc -t 100 -d 10 -g -b sbtest

      - name: Start OLTP Delete Test With 1000 Threads
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd mo-load
          echo 'Start Prepare Data of 10-tables-100000-per-table'
          ./start.sh -m SYSBENCH -n 10 -s 100000
          sleep 10
          
          echo ''
          echo 'Start OLTP Delete Test With 1000 threads'
          ./start.sh -c cases/sysbench/delete_pk_10_100000_rc -t 1000 -d 10 -g -b sbtest

      - name: Start OLTP Insert AutoIncrement Test With 100 Threads
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd mo-load
          sed -i 's/false/true/g' sysbench.yml
          echo 'Start Prepare AutoIncremental Data of 10-tables-100000-per-table'
          ./start.sh -m SYSBENCH -n 10 -s 100000
          sleep 10
          
          echo ''
          echo 'Start OLTP Insert Test With 100 threads'
          ./start.sh -c cases/sysbench/simple_insert_10_100000_auto -t 100 -d 10 -g -b sbtest